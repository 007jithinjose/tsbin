# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - tsbin-api

on:
  push:
    branches:
      - master
    paths:
      - "backend/**"
      - ".github/workflows/master_tsbin-api.yml"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read # Required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: "20.x" # NestJS works well with Node 20 LTS

      - name: Install dependencies
        working-directory: ./backend
        run: npm install

      - name: Build NestJS app
        working-directory: ./backend
        run: npm run build

      - name: Run tests (optional)
        working-directory: ./backend
        run: npm run test --if-present

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: nestjs-app
          path: ./backend

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: nestjs-app
          path: ./backend

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_5A2C758903BE4D069CC0698DE4105791 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_19267B68D35B4D48AF0B0DC19F9EAB8C }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_431358DA06EB4C4EB57F2703326BAF42 }}

      - name: "Deploy to Azure Web App"
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: "tsbin-api"
          slot-name: "Production"
          package: ./backend
